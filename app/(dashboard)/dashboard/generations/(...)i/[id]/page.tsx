import Modal from "@/components/modal"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import {
    Dialog,
    DialogContent,
    DialogDescription,
    DialogFooter,
    DialogHeader,
    DialogTitle,
    DialogTrigger,
} from "@/components/ui/dialog"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { db } from "@/lib/db"
import type { Metadata } from "next"
import Image from "next/image"

type Props = {
    params: { id: string }
    searchParams: { [key: string]: string | string[] | undefined }
}

export async function generateMetadata({
    params: { id: photoId },
}: Props): Promise<Metadata> {
    const photo = await db.outputImage.findUniqueOrThrow({
        where: {
            id: photoId,
        },
        include: {
            generation: true,
        },
    })

    return {
        title: "Check out my pixel art image generated by AI on Pixelfy",
        description: photo?.generation.prompt,
        twitter: {
            card: "summary_large_image",
            title: "Check out my pixel art image generated by AI on Pixelfy",
            description: photo?.generation.prompt,
            images: [photo?.pixelatedImage ?? ""],
            creator: "@dparksdev",
        },
    }
}

export default async function PhotoModal({ params: { id: photoId } }) {
    const photo = await db.outputImage.findUnique({
        where: {
            id: photoId,
        },
        include: {
            generation: true,
        },
    })

    return (
        <Modal
            footer={
                <a
                    rel="noopener noreferrer"
                    target="_blank"
                    href={`https://twitter.com/intent/tweet?text=Check out my pixel art image generated by AI on Pixelfy&url=${`https://www.pixelfy.ai/i/${photo.id}`}&via=pixelfydotai`}
                    className="flex w-full items-center gap-2"
                >
                    <Button className="w-full" type="submit">
                        Share on Twitter
                    </Button>
                </a>
            }
        >
            {photo && (
                <>
                    <Image
                        className="object-contain rounded-md overflow-hidden"
                        height={512}
                        width={512}
                        alt={photo?.generation.prompt}
                        src={photo?.pixelatedImage}
                    />
                    <div className="flex flex-col w-full mt-0">
                        <div className="flex gap-2 flex-wrap">
                            <Badge variant="outline">
                                {photo?.generation?.numInferenceSteps} sampling
                                steps
                            </Badge>
                            <Badge variant="outline">
                                {photo?.generation?.guidance} guidance
                            </Badge>
                        </div>

                        <p className="text-sm mt-4">
                            {photo?.generation.prompt}
                        </p>
                    </div>
                </>
            )}
        </Modal>
    )
}
